<?xml version="1.0" encoding="UTF-8"?>
<xs:schema
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    elementFormDefault="qualified">
    
    <!-- ROOT -->
    <xs:element name="ONTOLOGY">
        <xs:annotation>
            <xs:documentation xml:lang="en">
                The ontology is an element container for the list of units.
            </xs:documentation>
        </xs:annotation>
        
        <xs:complexType>
            <xs:annotation>
                <xs:documentation xml:lang="en">
                    The unit is the transaction unit.
                </xs:documentation>
            </xs:annotation>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" ref="UNIT" />
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    
    <!-- UNIT -->
    <xs:element name="UNIT">
        <xs:annotation>
            <xs:documentation xml:lang="en">
                Each unit represents a set of term, node, edge and tag
                instances which define a set of graph related elements.
            </xs:documentation>
        </xs:annotation>
        
        <xs:complexType>
            <xs:sequence>
                 <xs:element minOccurs="0" maxOccurs="unbounded" ref="TERM">
                     <xs:annotation>
                         <xs:documentation xml:lang="en">
                             List of terms to be instantiated.
                         </xs:documentation>
                     </xs:annotation>
                 </xs:element>
                
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="NODE">
                    <xs:annotation>
                        <xs:documentation xml:lang="en">
                            List of nodes to be instantiated.
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
 
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="EDGE">
                    <xs:annotation>
                        <xs:documentation xml:lang="en">
                            List of edges to be instantiated.
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="TAG">
                    <xs:annotation>
                        <xs:documentation xml:lang="en">
                            List of tags to be instantiated.
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    
    <!-- TERMS -->
    <xs:element name="TERM">
        <xs:annotation>
            <xs:documentation xml:lang="en">
                Term block, should instantiate a single block and can be
                repeated for as many terms need to be defined for the curent block.
            </xs:documentation>
        </xs:annotation>
        
        <xs:complexType>
            <xs:sequence>
                <xs:annotation>
                    <xs:documentation xml:lang="en">
                        Terms should be included only to be inserted, for other cases
                        simply reference the term's global identifier.
                    </xs:documentation>
                </xs:annotation>
                <xs:element maxOccurs="unbounded" ref="element"/>
            </xs:sequence>
            
            <xs:attribute name="NS" type="xs:string">
                <xs:annotation>
                    <xs:documentation xml:lang="en">
                        Term namespace as the namespace's term global identifier.
                    </xs:documentation>
                </xs:annotation>
            </xs:attribute>
            
            <xs:attribute name="LID" use="required" type="xs:string">
                <xs:annotation>
                    <xs:documentation xml:lang="en">
                        Term local identifier, required to provide the term global identifier.
                    </xs:documentation>
                </xs:annotation>
            </xs:attribute>
            
            <xs:attribute name="modify" type="xs:string">
                <xs:annotation>
                    <xs:documentation xml:lang="en">
                        Term global identifier. If provided it means that the operations to be
                        applied to the term are modifications and not insertion: all the elements
                        contained in the term will either replace or be added to the term.
                    </xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    
    <!-- NODES -->
    <xs:element name="NODE">
        <xs:annotation>
            <xs:documentation xml:lang="en">
                Node block, should instantiate a single block and can be
                repeated for as many nodes need to be defined for the curent block.
                Nodes will be identified within the block by the term identifier:
                this means that no two nodes may refer to a term in the same unit.
            </xs:documentation>
        </xs:annotation>
        
        <xs:complexType>
            <xs:sequence>
                <xs:annotation>
                    <xs:documentation xml:lang="en">
                        Nodes should be included only to be inserted, a node may
                        feature no elements, since the class is provided as an attribute
                        and the term may be implicit.
                    </xs:documentation>
                </xs:annotation>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="element"/>
            </xs:sequence>
            
            <xs:attribute name="class" use="required" type="xs:string">
                <xs:annotation>
                    <xs:documentation xml:lang="en">
                        Node class name, this attribute is required.
                    </xs:documentation>
                </xs:annotation>
            </xs:attribute>
            
            <xs:attribute name="term" type="xs:string">
                <xs:annotation>
                    <xs:documentation xml:lang="en">
                        Term reference, should refer to the global identifier of the term;
                        if omitted, there may be only one term in the current unit and that
                        term will be implicitly used as the node's term reference.
                    </xs:documentation>
                </xs:annotation>
            </xs:attribute>
            
            <xs:attribute name="modify" type="xs:string">
                <xs:annotation>
                    <xs:documentation xml:lang="en">
                        Either the node PID, if the term was not provided, or any other value.
                        If provided it means that the operations to beapplied to the node are
                        modifications and not insertion: all the elements contained in the node
                        will either replace or be added to the node.
                        I the term attribute is present, the value of this attribute will be
                        ignored; if the term attribute is missing, the value of this attribute
                        will be interpreted as the node's PID.
                    </xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    
    <!-- EDGES -->
    <xs:element name="EDGE">
        <xs:annotation>
            <xs:documentation xml:lang="en">
                Edge block, should instantiate a single relationship and can be
                repeated for as many edges need to be defined for the curent block.
                Nodes are referenced by their term global identifier, as stated above,
                no two nodes may refer to the same term within the same unit.
            </xs:documentation>
        </xs:annotation>
        
        <xs:complexType>
            <xs:sequence>
                <xs:annotation>
                    <xs:documentation xml:lang="en">
                        Edges require require subject, predicate and object. If the
                        subject is omitted, it is assumed that the unit has only one
                        node and that node will be the subject; the same is true if
                        the object is omitted. The predicate must always be indicated.
                    </xs:documentation>
                </xs:annotation>
                <xs:element maxOccurs="unbounded" ref="element"/>
            </xs:sequence>
            
            <xs:attribute name="master" type="xs:boolean">
                <xs:annotation>
                    <xs:documentation xml:lang="en">
                        This switch determines whether the relationship will be propagated
                        to the master nodes if the current vertices are alias nodes.
                    </xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    
    <!-- TAGS -->
    <xs:element name="TAG">
        <xs:annotation>
            <xs:documentation xml:lang="en">
                Tag block, should instantiate a single tag, elements of the kTAG_PATH
                must be referenced by term global identifier: if any matching node was instantiated
                within the unit, it will be used instead of the term.
            </xs:documentation>
        </xs:annotation>
        
        <xs:complexType>
            <xs:sequence>
                <xs:annotation>
                    <xs:documentation xml:lang="en">
                        Tags require the path to be indicated, if the tag has no elements,
                        it is assumed that the unit has only one node, and that node will be
                        set in the path.
                    </xs:documentation>
                </xs:annotation>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="element"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    
    <!-- Attributes -->
    <xs:element name="element">
        <xs:annotation>
            <xs:documentation xml:lang="en">
                Attribute block, each element should define a single property
                or attribute. Array elements should include item elements, scalar
                elements should store the value.
            </xs:documentation>
        </xs:annotation>
        
        <xs:complexType mixed="true">
            <xs:sequence>
                <xs:annotation>
                    <xs:documentation xml:lang="en">
                        These elements are used to provide object properties
                        not already set with the element attributes.
                    </xs:documentation>
                </xs:annotation>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="item"/>
            </xs:sequence>
            
            <xs:attribute name="tag" type="xs:string">
                <xs:annotation>
                    <xs:documentation xml:lang="en">
                        The tag attribute should reference a tag native identifier.
                    </xs:documentation>
                </xs:annotation>
            </xs:attribute>
            
            <xs:attribute name="variable" type="xs:string">
                <xs:annotation>
                    <xs:documentation xml:lang="en">
                        The variable attribute should reference a tag through the
                        constant name.
                    </xs:documentation>
                </xs:annotation>
            </xs:attribute>
            
            <xs:attribute name="node" type="node-ref-type">
                <xs:annotation>
                    <xs:documentation xml:lang="en">
                        If this attribute is provided, it means that the value of the element
                        is to be considered a node reference which will be resolved and the
                        resulting node's native identifier will replace the value of the element.
                    </xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    
    <!-- Attribute items -->
    <xs:element name="item">
        <xs:annotation>
            <xs:documentation xml:lang="en">
                Item elements should be used to instantiate array elements,
                use the key attribute if the array uses keys.
            </xs:documentation>
        </xs:annotation>
        
        <xs:complexType mixed="true">
            <xs:sequence>
                <xs:annotation>
                    <xs:documentation xml:lang="en">
                        These elements are used to provide object property array
                        elements, scalar properties take their value from the
                        parent element value. Items may be nested if the property
                        is a nested array.
                    </xs:documentation>
                </xs:annotation>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="item"/>
            </xs:sequence>
            
            <xs:attribute name="key" type="xs:string">
                <xs:annotation>
                    <xs:documentation xml:lang="en">
                        This attribute should hold the array item index value, only
                        if the array is to be used as an object.
                    </xs:documentation>
                </xs:annotation>
            </xs:attribute>
            
            <xs:attribute name="node" type="node-ref-type">
                <xs:annotation>
                    <xs:documentation xml:lang="en">
                        If this attribute is provided, it means that the value of the element
                        is to be considered a node reference which will be resolved and the
                        resulting node's native identifier will replace the value of the element.
                    </xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    
    <xs:simpleType name="node-ref-type">
        <xs:annotation>
            <xs:documentation xml:lang="en">
                This enumeration defines the different types of node references that
                can be expressed, it is used to provide a reference to a node in
                several ways.
            </xs:documentation>
        </xs:annotation>
        
        <xs:restriction base="xs:string">
            <xs:enumeration value="term">
                <xs:annotation>
                    <xs:documentation xml:lang="en">
                        The value of the element is a term global identifier,
                        this means that the node will be the master node related
                        to that term.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            
            <xs:enumeration value="node">
                <xs:annotation>
                    <xs:documentation xml:lang="en">
                        The value of the element is a node native identifier,
                        the value of the element will not be changed.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            
            <xs:enumeration value="pid">
                <xs:annotation>
                    <xs:documentation xml:lang="en">
                        The value of the element is a node persistent identifier,
                        the node will be resolved and its native identifier will
                        replace the current element's value.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>   
</xs:schema>
